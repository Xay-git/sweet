package com.sweet.modular.weixin;import com.sweet.core.exception.ServiceException;import com.sweet.core.jwt.JwtTokenUtil;import com.sweet.core.model.ResultBean;import com.sweet.core.model.system.LayuiPageInfo;import com.sweet.core.model.system.layMenu;import com.sweet.core.shiro.ShiroKit;import com.sweet.core.translationDict.TranslationDict;import com.sweet.core.util.MD5Utils;import com.sweet.core.util.RedisUtil;import com.sweet.core.util.StringUtil;import com.sweet.system.entity.User;import com.sweet.system.service.UserService;import me.chanjar.weixin.common.error.WxErrorException;import me.chanjar.weixin.mp.api.WxMpService;import me.chanjar.weixin.mp.bean.result.WxMpOAuth2AccessToken;import me.chanjar.weixin.mp.bean.result.WxMpUser;import org.apache.shiro.authc.AuthenticationException;import org.apache.shiro.authc.IncorrectCredentialsException;import org.apache.shiro.authc.UnknownAccountException;import org.apache.shiro.authc.UsernamePasswordToken;import org.apache.shiro.subject.Subject;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import javax.servlet.http.HttpServletRequest;import java.util.HashMap;import java.util.List;import java.util.Map;@Controller@RequestMapping("/weixin")public class WeiXinController {    @Autowired    HttpServletRequest request;    @Autowired    RedisUtil redisUtil;    @Autowired    WxMpService wxMpService;    @Autowired    UserService userService;    @RequestMapping("")    public String weixin(String code, Model model) throws WxErrorException {        if(StringUtil.isNotEmpty(code)){            WxMpOAuth2AccessToken token = wxMpService.oauth2getAccessToken(code);            model.addAttribute("openId",token.getOpenId());        }        return "/modular/weixin/index";    }    @RequestMapping("/login")    public String login(){        return "/modular/weixin/login";    }    @RequestMapping("/loginSubmit")    @ResponseBody    public ResultBean loginSubmit(User user, String openId) throws WxErrorException {        String username = user.getUserName().toLowerCase();        String password = MD5Utils.encrypt(username, user.getPassword());        UsernamePasswordToken token = new UsernamePasswordToken(username, password);        // 获取Subject对象        Subject subject = ShiroKit.getSubject();        try {            subject.login(token);            user = ShiroKit.getUser();            Map map = new HashMap<>();            map.put("user",user);            map.put("token", JwtTokenUtil.generateToken(user.getUserId()));            if(StringUtil.isNotEmpty(openId)){                WxMpUser wxMpUser =wxMpService.getUserService().userInfo(openId);                map.put("wxuser",wxMpUser);            }            return ResultBean.success(map);        } catch (UnknownAccountException e) {            throw new ServiceException("用户不存在");        } catch (IncorrectCredentialsException e) {            throw new ServiceException(e.getMessage());        } catch (AuthenticationException e) {            throw new ServiceException("认证失败");        }    }    @RequestMapping("/menuList")    @ResponseBody    public ResultBean navTree(){        String userId = String.valueOf(request.getAttribute("userId"));        User user = userService.getById(userId);        List<layMenu> list= userService.findNavByUserName(user.getUserName());        return ResultBean.success(list);    }}