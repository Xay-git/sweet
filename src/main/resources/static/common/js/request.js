axios.defaults.timeout = 5000;axios.defaults.baseURL ='';axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';//http request 拦截器axios.interceptors.request.use(    config => {        // sysconst token = getCookie('名称');注意使用的时候需要引入cookie方法，推荐js-cookie        config.headers = {            'Content-Type':'application/x-www-form-urlencoded'        }        // if(token){        //   config.params = {'token':token}        // }        return config;    },    error => {        return Promise.reject(err);    });//http response 拦截器// axios.interceptors.response.use(//     response => {//         if(response.data.errCode ==2){////         }//         return response;//     },//     error => {//         return Promise.reject(error)//     }// )const request = {    fetch:function (url,params={}){        return new Promise((resolve,reject) => {            axios.get(url,{                params:params            })            .then(response => {                resolve(response.data.data);            })            .catch(err => {                top.layer.msg(err.response.data.message, {icon: 5});                reject(err)            })        })    },    post:function (url,data = {}) {        return new Promise((resolve, reject) => {            axios.post(url,Qs.stringify(data))                .then(response => {                    resolve(response.data.data);                }, err => {                    reject(err)                })        })    }}