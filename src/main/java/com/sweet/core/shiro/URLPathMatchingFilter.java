package com.sweet.core.shiro;import com.sweet.core.util.SpringContextUtil;import com.sweet.modular.system.entity.Menu;import com.sweet.modular.system.entity.Role;import com.sweet.modular.system.entity.User;import com.sweet.modular.system.mapper.MenuMapper;import com.sweet.modular.system.mapper.RoleMapper;import com.sweet.modular.system.service.UserService;import lombok.extern.slf4j.Slf4j;import org.apache.shiro.SecurityUtils;import org.apache.shiro.authz.AuthorizationException;import org.apache.shiro.authz.UnauthorizedException;import org.apache.shiro.subject.Subject;import org.apache.shiro.web.filter.PathMatchingFilter;import org.apache.shiro.web.util.WebUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;import java.util.List;import java.util.Set;import java.util.stream.Collectors;@Slf4jpublic class URLPathMatchingFilter extends PathMatchingFilter {    @Autowired    UserService userService;    @Override    protected boolean onPreHandle(ServletRequest request, ServletResponse response, Object mappedValue)            throws Exception {        userService = SpringContextUtil.getApplicationContext().getBean(UserService.class);        log.debug("进入shiroUrl拦截器   -------URLPathMatchingFilter");        String requestURI = getPathWithinApplication(request);        System.out.println("requestURI:" + requestURI);        if (!ShiroKit.isUser()) {            // 如果没有登录, 直接返回false 进入登录流程            WebUtils.issueRedirect(request, response, "/admin/login");            return false;        }        User user = ShiroKit.getUser();        String userName = user.getUserName();        Set<String> roleSet = userService.getUserRole(userName);        //如果是管理员直接放行        if(roleSet.contains("admin")){            return true;        }        //创建权限标记        boolean hasPermission = false;        //如果url大于三层分割为两层        String[] str = requestURI.split("/");        if (str.length > 3) {            requestURI = "/" + str[1] + "/" + str[2];        }        Set<String> menuSet = userService.getUserMenu(userName);        for (String url : menuSet) {            if(url!=null){                if (requestURI.equals(url)) {                    hasPermission = true;                }            }        }        //如果拥有权限放行        if (hasPermission) {            return true;        } else {            //否则跳转到未授权页面            request.setAttribute("javax.servlet.error.status_code",403);            WebUtils.issueRedirect(request, response, "/error");            return false;        }    }}