package com.sweet.core.exception;import com.sweet.core.model.ResultBean;import com.sweet.core.model.ResultError;import org.apache.shiro.authz.AuthorizationException;import org.beetl.ext.fn.StringUtil;import org.springframework.core.annotation.Order;import org.springframework.http.HttpStatus;import org.springframework.web.bind.annotation.ControllerAdvice;import org.springframework.web.bind.annotation.ExceptionHandler;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.web.bind.annotation.ResponseStatus;import java.util.HashMap;import java.util.Map;@ControllerAdvice@Order(-1)public class ControllerExceptionHandler {    @ExceptionHandler(UserNotExistException.class)    @ResponseBody    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)    public Map<String, Object> handleUserNotExistsException(UserNotExistException e) {        Map<String, Object> map = new HashMap<>();        map.put("id", e.getId());        map.put("message", e.getMessage());        return map;    }    @ExceptionHandler(value = AuthorizationException.class)    public String handleAuthorizationException() {        return "/admin/template/tips/error";    }    /**     * 拦截业务异常     */    @ExceptionHandler(ServiceException.class)    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)    @ResponseBody    public ResultBean bussiness(ServiceException e) {        return new ResultError(e.getCode(), e.getMessage());    }}