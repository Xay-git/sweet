package com.sweet.modular.system.service.impl;import com.baomidou.mybatisplus.core.toolkit.IdWorker;import com.sweet.core.exception.ServiceException;import com.sweet.core.exception.enums.BizExceptionEnum;import com.sweet.core.util.ToolUtil;import com.sweet.modular.system.model.UploadResult;import com.sweet.modular.system.service.FileService;import lombok.extern.slf4j.Slf4j;import org.apache.tomcat.jni.FileInfo;import org.springframework.stereotype.Service;import org.springframework.web.multipart.MultipartFile;import java.io.File;import java.math.BigDecimal;@Slf4j@Servicepublic class FileServiceImpl implements FileService {    /**     * 上传文件（指定上传路径）     *     * @author fengshuonan     * @Date 2019-05-04 17:18     */    public UploadResult uploadFile(MultipartFile file, String fileSavePath) {        UploadResult uploadResult = new UploadResult();        //生成文件的唯一id        String fileId = IdWorker.getIdStr();        uploadResult.setFileId(fileId);        //获取文件后缀        String fileSuffix = ToolUtil.getFileSuffix(file.getOriginalFilename());        uploadResult.setFileSuffix(fileSuffix);        //获取文件原始名称        String originalFilename = file.getOriginalFilename();        uploadResult.setOriginalFilename(originalFilename);        //生成文件的最终名称        String finalName = fileId + "." + ToolUtil.getFileSuffix(originalFilename);        uploadResult.setFinalName(finalName);        uploadResult.setFileSavePath(fileSavePath + finalName);        Boolean iswin = ToolUtil.isWinOs();        String sysPath = "";        if(iswin){            sysPath = "d://sweet/";            File filepath = new File(sysPath);            if (!filepath.exists()) {                boolean mkdirs = filepath.mkdirs();            }        }        try {            //保存文件到指定目录            File newFile = new File(fileSavePath + finalName);            System.out.println(newFile.getAbsoluteFile());            System.out.println(newFile.getAbsolutePath());            file.transferTo(newFile);        } catch (Exception e) {            log.error("上传文件错误！", e);            throw new ServiceException(BizExceptionEnum.UPLOAD_ERROR);        }        return uploadResult;    }}