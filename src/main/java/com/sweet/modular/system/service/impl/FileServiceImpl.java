package com.sweet.modular.system.service.impl;import com.baomidou.mybatisplus.core.toolkit.IdWorker;import com.sweet.core.exception.ServiceException;import com.sweet.core.exception.enums.BizExceptionEnum;import com.sweet.core.util.ToolUtil;import com.sweet.modular.FileInfo.entity.FileInfo;import com.sweet.modular.FileInfo.mapper.FileInfoMapper;import com.sweet.modular.system.model.UploadResult;import com.sweet.modular.system.service.FileService;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.web.multipart.MultipartFile;import java.io.File;import java.math.BigDecimal;@Slf4j@Servicepublic class FileServiceImpl implements FileService {    @Autowired    FileInfoMapper fileInfoMapper;    private static final int DIR = 0;    private static final int FILE = 1;    /**     * 上传文件（指定上传路径）     *     * @author fengshuonan     * @Date 2019-05-04 17:18     */    public UploadResult uploadFile(MultipartFile file, String fileSavePath) {        UploadResult uploadResult = new UploadResult();        //默认顶级        String parentId = "0";        //生成文件的唯一id        String fileId = IdWorker.get32UUID();        uploadResult.setFileId(fileId);        //获取文件后缀        String fileSuffix = ToolUtil.getFileSuffix(file.getOriginalFilename());        uploadResult.setFileSuffix(fileSuffix);        //获取文件原始名称        String originalFilename = file.getOriginalFilename();        uploadResult.setOriginalFilename(originalFilename);        //生成文件的最终名称        String finalName = fileId + "." + ToolUtil.getFileSuffix(originalFilename);        uploadResult.setFinalName(finalName);        uploadResult.setFileSavePath(fileSavePath + finalName);        Boolean iswin = ToolUtil.isWinOs();        String sysPath = "";        if(iswin){            sysPath = "d://sweetUpload/";            File filepath = new File(sysPath);            if (!filepath.exists()) {                boolean mkdirs = filepath.mkdirs();            }            if(ToolUtil.isEmpty(fileSavePath)){                fileSavePath = "//";            }else{                //判断目录存不存在,不存在得加上                File SavePathDir = new File(sysPath+fileSavePath);                if (!SavePathDir.exists()) {                    boolean mkdirs = SavePathDir.mkdirs();                    FileInfo fileInfo = new FileInfo();                    fileInfo.setFileId(IdWorker.get32UUID());                    fileInfo.setParentId(parentId);                    fileInfo.setFileName(fileSavePath);                    fileInfo.setFinalName(fileSavePath);                    fileInfo.setFileType(DIR);                    fileInfoMapper.insert(fileInfo);                    parentId = fileInfo.getFileId();                }else {                   FileInfo fileInfo = fileInfoMapper.getFileDirByName(fileSavePath);                   parentId = fileInfo.getFileId();                }            }        }        try {            //保存文件到指定目录            File newFile = new File(sysPath+fileSavePath + finalName);            file.transferTo(newFile);            FileInfo fileInfo = new FileInfo();            fileInfo.setParentId(parentId);            //保存文件信息            fileInfo.setFileId(fileId);            fileInfo.setFileName(originalFilename);            fileInfo.setFileSuffix(fileSuffix);            fileInfo.setFilePath(fileSavePath + finalName);            fileInfo.setFinalName(finalName);            fileInfo.setFileType(FILE);            //计算文件大小kb            long kb = new BigDecimal(file.getSize())                    .divide(BigDecimal.valueOf(1024))                    .setScale(0, BigDecimal.ROUND_HALF_UP).longValue();            fileInfo.setFileSizeKb(kb);            fileInfo.setCreateUser(1L);            fileInfoMapper.insert(fileInfo);        } catch (Exception e) {            log.error("上传文件错误！", e);            throw new ServiceException(BizExceptionEnum.UPLOAD_ERROR);        }        return uploadResult;    }}